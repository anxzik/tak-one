
buildscript {
  dependencies {
	classpath('org.springframework.boot:spring-boot-gradle-plugin:' + spring_boot_version)
  }
}

jar {
	enabled = false
}

plugins {
	id 'eclipse'
	id 'idea'
	id 'org.springframework.boot' version '2.5.4'
	id 'war'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

bootWar {
  mainClass = "tak.server.federation.hub.ui.FederationHubUIServer"
}

application {
	mainClass = 'tak.server.federation.hub.ui.manage.AuthManager'
}

shadowJar {
  baseName = 'federation-hub-manager'
  classifier = 'all'
  version = version
  dependencies {
	exclude(dependency('org.apache.*:.*'))
	exclude(dependency('org.springframework.*:.*'))
  }
  archiveFileName = "${baseName}-${version}.${extension}"
}

test {
  testLogging.showStandardStreams = true

  // Display logging output.
  onOutput { descriptor, event -> logger.lifecycle(event.message) }
}

sourceSets {
  main {
	java {
	  srcDir 'build/src-generated'
	}
  }
}

configurations {
	implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {

  // this is pulled in via spring-boot-logging-starter, only including explicitly here in order to exclude log4j
  api ("org.springframework.boot:spring-boot-starter-logging:$spring_boot_version") {
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }

  implementation group: 'xerces', name: 'xercesImpl', version: xerces_version
  implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version

  api ("org.owasp.esapi:esapi:$esapi_version") {
	// exclude log4j from esapi
	exclude group: 'log4j', module: 'log4j'
  }

  api group: 'io.jsonwebtoken', name: 'jjwt', version: jsonwebtoken_version
  implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: json_simple_version

  implementation group: 'org.springframework.security', name: 'spring-security-core', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-authorization-server', version: spring_security_oauth2_authorization_server_version
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: spring_security_version

  implementation(project(':federation-common')) {
	exclude group: 'log4j', module: 'log4j'
	exclude group: 'org.apache.logging.log4j'
	exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
  }

  implementation group: 'com.h2database', name: 'h2', version: h2_version

  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: jsonwebtoken_version
  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'


  // Apache Ignite (cache and distributed service grid).
  implementation group: 'org.apache.ignite', name: 'ignite-spring', version: ignite_version
  implementation group: 'org.apache.ignite', name: 'ignite-kubernetes', version: ignite_version
  implementation group: 'org.apache.ignite', name: 'ignite-slf4j', version: ignite_version

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: spring_boot_version
  implementation group: 'io.micrometer', name: 'micrometer-core', version: micrometer_version

  implementation ("org.springframework.boot:spring-boot-loader:$spring_boot_version") {
	exclude group: 'log4j', module: 'log4j'
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_boot_version
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: spring_boot_version
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: spring_boot_version
  implementation group: 'org.springframework', name: 'spring-web', version: spring_version

  implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: jetty_server_version
  implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: jakarta_servlet_api_version

  testImplementation group: 'junit', name: 'junit', version: junit_version
  testImplementation group: 'org.mockito', name: 'mockito-core', version: mockito_version
  testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version") {
	exclude group: "com.vaadin.external.google", module:"android-json"
  }

  //implementation group: 'commons-fileupload', name: 'commons-fileupload', version: commons_fileupload_version
  implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttp3_version

  testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logback_version

  // This one is used in MartiValidator. We should find a way to remove this and use jakarta.servlet instead
  implementation 'javax.servlet:javax.servlet-api:4.0.1' {
	optional = true
  }

}

compileJava {
	options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:serial"]
}

buildscript {
  dependencies {
    classpath('org.springframework.boot:spring-boot-gradle-plugin:' + spring_boot_version)
  }
}

jar {
    enabled = false
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '2.5.4'
    id 'war'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

bootWar {
  mainClass = "tak.server.federation.hub.ui.FederationHubUIServer"
}

application {
    mainClass = 'tak.server.federation.hub.ui.manage.AuthManager'
}

shadowJar {
  baseName = 'federation-hub-manager'
  classifier = 'all'
  version = version
  dependencies {
    exclude(dependency('org.apache.*:.*'))
    exclude(dependency('org.springframework.*:.*'))
  }
  archiveFileName = "${baseName}-${version}.${extension}"
}

test {
  testLogging.showStandardStreams = true

  // Display logging output.
  onOutput { descriptor, event -> logger.lifecycle(event.message) }
}

sourceSets {
  main {
    java {
      srcDir 'build/src-generated'
    }
  }
}

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {

  // this is pulled in via spring-boot-logging-starter, only including explicitly here in order to exclude log4j
  api ("org.springframework.boot:spring-boot-starter-logging:$spring_boot_version") {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }

  implementation group: 'xerces', name: 'xercesImpl', version: xerces_version
  implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version

  api ("org.owasp.esapi:esapi:$esapi_version") {
    // exclude log4j from esapi
    exclude group: 'log4j', module: 'log4j'
  }

  api group: 'io.jsonwebtoken', name: 'jjwt', version: jsonwebtoken_version
  implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: json_simple_version

  implementation group: 'org.springframework.security', name: 'spring-security-core', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-authorization-server', version: spring_security_oauth2_authorization_server_version
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: spring_security_version

  implementation(project(':federation-common')) {
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
  }

  implementation group: 'com.h2database', name: 'h2', version: h2_version

  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: jsonwebtoken_version
  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'


  // Apache Ignite (cache and distributed service grid).
  implementation group: 'org.apache.ignite', name: 'ignite-spring', version: ignite_version
  implementation group: 'org.apache.ignite', name: 'ignite-kubernetes', version: ignite_version
  implementation group: 'org.apache.ignite', name: 'ignite-slf4j', version: ignite_version

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: spring_boot_version
  implementation group: 'io.micrometer', name: 'micrometer-core', version: micrometer_version

  implementation ("org.springframework.boot:spring-boot-loader:$spring_boot_version") {
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_boot_version
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: spring_boot_version
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: spring_boot_version
  implementation group: 'org.springframework', name: 'spring-web', version: spring_version

  implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: jetty_server_version
  implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: jakarta_servlet_api_version

  testImplementation group: 'junit', name: 'junit', version: junit_version
  testImplementation group: 'org.mockito', name: 'mockito-core', version: mockito_version
  testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version") {
    exclude group: "com.vaadin.external.google", module:"android-json"
  }

  //implementation group: 'commons-fileupload', name: 'commons-fileupload', version: commons_fileupload_version
  implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttp3_version

  testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logback_version

  // This one is used in MartiValidator. We should find a way to remove this and use jakarta.servlet instead
  compileOnly group: 'javax.servlet', name: 'servlet-api', version: javax_servlet_version

}

compileJava {
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:serial"]
}
